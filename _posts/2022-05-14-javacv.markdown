---
layout: post
title:  "JavaCV를 이용해 오디오 추출 from 비디오 & 오디오 비디오 merge"
categories: javacv java video audio 
---

JAVA를 사용한 영상처리 및 오디오 처리를 위해 사용할 때 편하게 사용할 수 있는 것 같다. 
간단한 만큼 그래도 많은 테스트가 필요할 듯! 

### JavaCV Dependencies 설정
    implementation group: 'org.bytedeco', name: 'javacv-platform', version: '1.5.7'


### Audio Extractor EX
    package com.sweetk.kt_aim_api;

    import javax.sound.sampled.AudioFormat;
    import javax.sound.sampled.SourceDataLine;
    import javax.swing.JOptionPane;
    
    import org.bytedeco.ffmpeg.global.avcodec;
    import org.bytedeco.javacv.FFmpegFrameGrabber;
    import org.bytedeco.javacv.FFmpegFrameRecorder;
    import org.bytedeco.javacv.Frame;
    
    import java.io.File;
    import java.util.logging.Logger;
    
    public class TestAudioExtrat {
    
        public static void main(String[] args) {
            String videoFolder="test_data/";
            //video file
            String videoFile = "JJ-E-Dance Challenge-2-720_cut_dancer.mp4";
            //path
            String videoPath = videoFolder + videoFile;
            //audio path
            String extractAudio=videoFolder+"/extraxAudio.mp3";
            try{
                File extractAudioFile = new File(extractAudio);
    
                //audio recorder，extractAudio:audio path，2:channels
                FFmpegFrameRecorder recorder = new FFmpegFrameRecorder(extractAudio, 2);
                recorder.setAudioOption("crf", "0");
                recorder.setAudioQuality(0);
                //bit rate
                recorder.setAudioBitrate(192000);
                //sample rate
                recorder.setSampleRate(44100);
                recorder.setAudioChannels(2);
                //encoder
                recorder.setAudioCodec(avcodec.AV_CODEC_ID_MP3);
                //start
                recorder.start();
                //load video
                FFmpegFrameGrabber grabber = FFmpegFrameGrabber.createDefault(videoPath);
                grabber.start();
                Frame f=null;
                //get audio sample and record it
                while ((f = grabber.grabSamples()) != null) {
                    recorder.record(f);
                }
                // stop to save
                grabber.stop();
                recorder.close();
                //output audio path
                System.out.println(extractAudio);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }


### Audio Video Merge EX
    package com.sweetk.kt_aim_api;

    import org.bytedeco.ffmpeg.global.avcodec;
    import org.bytedeco.javacv.FFmpegFrameGrabber;
    import org.bytedeco.javacv.FFmpegFrameRecorder;
    import org.bytedeco.javacv.Frame;
    import org.bytedeco.javacv.FrameGrabber;


    /**
     * 오디오와 비디오 병합
      - 오디오와 비디오 병합시 비디오는 오디오가 포함이 안되어있어야하며
      - 포함되어있을 시 영상뒤에 오디오가 붙어버림
     **/
    public class TestAudioVideoMerge {
        public static void main(String[] args) {
            String testFolder = "test_data/";

            String videoPath = testFolder + "sweetkRecordMovie4.mp4";
            String audioPath = testFolder + "extraxAudio.mp3";

            //new video file path
            String videoGenPath = testFolder + "mergeVideoAndAudio.mp4";

            //create video grabber
            FrameGrabber videoGrabber = new FFmpegFrameGrabber(videoPath);
            //create audio grabber
            FrameGrabber audioGrabber = new FFmpegFrameGrabber(audioPath);

            try {
                //start grabber
                videoGrabber.start();
                audioGrabber.start();
                //recorder for  ceating audio video
                FFmpegFrameRecorder recorder = new FFmpegFrameRecorder(videoGenPath, videoGrabber.getImageWidth(),
                videoGrabber.getImageHeight(), audioGrabber.getAudioChannels());

                recorder.setVideoCodec(avcodec.AV_CODEC_ID_H264);
                recorder.setAudioCodec(avcodec.AV_CODEC_ID_AAC);

                //set video frame rate
                recorder.setFrameRate(videoGrabber.getFrameRate());
                recorder.setFrameRate(videoGrabber.getFrameRate());
                recorder.setVideoBitrate(videoGrabber.getVideoBitrate());  // 설정 안하면 화질 떨어짐 but 용량 매우 작아짐 (예 :50메가> 6메가정도)
                //set audio sample rate
                recorder.setSampleRate(audioGrabber.getSampleRate());

                recorder.setVideoQuality(1);
                recorder.setFormat("mp4");
                recorder.setAudioChannels(2);

                //record stard
                recorder.start();


                 //output basic info
                 Frame frame;
    
                 //record video frame
                 while ((frame = videoGrabber.grabFrame()) != null) {
                     recorder.record(frame);
                 }
    
                 // record audio frame
                 while ((frame = audioGrabber.grabFrame()) != null) {
                     recorder.record(frame);
                 }
    
                 //complete
                 recorder.stop();
                 //output path
                 System.out.println(videoGenPath);
            } catch (Exception e) {
                e.printStackTrace();
            }finally{
                try {
                    videoGrabber.stop();
                    audioGrabber.stop();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }   
    }


